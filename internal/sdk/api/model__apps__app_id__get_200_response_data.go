/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the AppsAppIdGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppsAppIdGet200ResponseData{}

// AppsAppIdGet200ResponseData This object represents an app.
type AppsAppIdGet200ResponseData struct {
	// The app ID.
	Id string `json:"id"`
	// The name of the App
	Name string `json:"name"`
	// The description of the App
	Description NullableString `json:"description"`
	// The id of the folder
	FolderId string `json:"folder_id"`
	// Whether the App is protected
	Protected bool `json:"protected"`
	// Whether the App is synced
	Synced bool `json:"synced"`
	// The shortlink of the App
	Shortlink NullableString `json:"shortlink"`
	// Whether the App is a module
	IsModule bool `json:"is_module"`
	// Whether the App is a mobile app
	IsMobileApp bool `json:"is_mobile_app"`
	AdditionalProperties map[string]interface{}
}

type _AppsAppIdGet200ResponseData AppsAppIdGet200ResponseData

// NewAppsAppIdGet200ResponseData instantiates a new AppsAppIdGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppsAppIdGet200ResponseData(id string, name string, description NullableString, folderId string, protected bool, synced bool, shortlink NullableString, isModule bool, isMobileApp bool) *AppsAppIdGet200ResponseData {
	this := AppsAppIdGet200ResponseData{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.FolderId = folderId
	this.Protected = protected
	this.Synced = synced
	this.Shortlink = shortlink
	this.IsModule = isModule
	this.IsMobileApp = isMobileApp
	return &this
}

// NewAppsAppIdGet200ResponseDataWithDefaults instantiates a new AppsAppIdGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppsAppIdGet200ResponseDataWithDefaults() *AppsAppIdGet200ResponseData {
	this := AppsAppIdGet200ResponseData{}
	return &this
}

// GetId returns the Id field value
func (o *AppsAppIdGet200ResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AppsAppIdGet200ResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AppsAppIdGet200ResponseData) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AppsAppIdGet200ResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AppsAppIdGet200ResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AppsAppIdGet200ResponseData) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AppsAppIdGet200ResponseData) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppsAppIdGet200ResponseData) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *AppsAppIdGet200ResponseData) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetFolderId returns the FolderId field value
func (o *AppsAppIdGet200ResponseData) GetFolderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value
// and a boolean to check if the value has been set.
func (o *AppsAppIdGet200ResponseData) GetFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FolderId, true
}

// SetFolderId sets field value
func (o *AppsAppIdGet200ResponseData) SetFolderId(v string) {
	o.FolderId = v
}

// GetProtected returns the Protected field value
func (o *AppsAppIdGet200ResponseData) GetProtected() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value
// and a boolean to check if the value has been set.
func (o *AppsAppIdGet200ResponseData) GetProtectedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protected, true
}

// SetProtected sets field value
func (o *AppsAppIdGet200ResponseData) SetProtected(v bool) {
	o.Protected = v
}

// GetSynced returns the Synced field value
func (o *AppsAppIdGet200ResponseData) GetSynced() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Synced
}

// GetSyncedOk returns a tuple with the Synced field value
// and a boolean to check if the value has been set.
func (o *AppsAppIdGet200ResponseData) GetSyncedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Synced, true
}

// SetSynced sets field value
func (o *AppsAppIdGet200ResponseData) SetSynced(v bool) {
	o.Synced = v
}

// GetShortlink returns the Shortlink field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AppsAppIdGet200ResponseData) GetShortlink() string {
	if o == nil || o.Shortlink.Get() == nil {
		var ret string
		return ret
	}

	return *o.Shortlink.Get()
}

// GetShortlinkOk returns a tuple with the Shortlink field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppsAppIdGet200ResponseData) GetShortlinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Shortlink.Get(), o.Shortlink.IsSet()
}

// SetShortlink sets field value
func (o *AppsAppIdGet200ResponseData) SetShortlink(v string) {
	o.Shortlink.Set(&v)
}

// GetIsModule returns the IsModule field value
func (o *AppsAppIdGet200ResponseData) GetIsModule() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsModule
}

// GetIsModuleOk returns a tuple with the IsModule field value
// and a boolean to check if the value has been set.
func (o *AppsAppIdGet200ResponseData) GetIsModuleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsModule, true
}

// SetIsModule sets field value
func (o *AppsAppIdGet200ResponseData) SetIsModule(v bool) {
	o.IsModule = v
}

// GetIsMobileApp returns the IsMobileApp field value
func (o *AppsAppIdGet200ResponseData) GetIsMobileApp() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMobileApp
}

// GetIsMobileAppOk returns a tuple with the IsMobileApp field value
// and a boolean to check if the value has been set.
func (o *AppsAppIdGet200ResponseData) GetIsMobileAppOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsMobileApp, true
}

// SetIsMobileApp sets field value
func (o *AppsAppIdGet200ResponseData) SetIsMobileApp(v bool) {
	o.IsMobileApp = v
}

func (o AppsAppIdGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppsAppIdGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description.Get()
	toSerialize["folder_id"] = o.FolderId
	toSerialize["protected"] = o.Protected
	toSerialize["synced"] = o.Synced
	toSerialize["shortlink"] = o.Shortlink.Get()
	toSerialize["is_module"] = o.IsModule
	toSerialize["is_mobile_app"] = o.IsMobileApp

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AppsAppIdGet200ResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"description",
		"folder_id",
		"protected",
		"synced",
		"shortlink",
		"is_module",
		"is_mobile_app",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppsAppIdGet200ResponseData := _AppsAppIdGet200ResponseData{}

	err = json.Unmarshal(data, &varAppsAppIdGet200ResponseData)

	if err != nil {
		return err
	}

	*o = AppsAppIdGet200ResponseData(varAppsAppIdGet200ResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "folder_id")
		delete(additionalProperties, "protected")
		delete(additionalProperties, "synced")
		delete(additionalProperties, "shortlink")
		delete(additionalProperties, "is_module")
		delete(additionalProperties, "is_mobile_app")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppsAppIdGet200ResponseData struct {
	value *AppsAppIdGet200ResponseData
	isSet bool
}

func (v NullableAppsAppIdGet200ResponseData) Get() *AppsAppIdGet200ResponseData {
	return v.value
}

func (v *NullableAppsAppIdGet200ResponseData) Set(val *AppsAppIdGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAppsAppIdGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAppsAppIdGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppsAppIdGet200ResponseData(val *AppsAppIdGet200ResponseData) *NullableAppsAppIdGet200ResponseData {
	return &NullableAppsAppIdGet200ResponseData{value: val, isSet: true}
}

func (v NullableAppsAppIdGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppsAppIdGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


