/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the UsersUserIdPatchRequestOperationsInnerAnyOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersUserIdPatchRequestOperationsInnerAnyOf1{}

// UsersUserIdPatchRequestOperationsInnerAnyOf1 struct for UsersUserIdPatchRequestOperationsInnerAnyOf1
type UsersUserIdPatchRequestOperationsInnerAnyOf1 struct {
	Op string `json:"op"`
	Path string `json:"path"`
	AdditionalProperties map[string]interface{}
}

type _UsersUserIdPatchRequestOperationsInnerAnyOf1 UsersUserIdPatchRequestOperationsInnerAnyOf1

// NewUsersUserIdPatchRequestOperationsInnerAnyOf1 instantiates a new UsersUserIdPatchRequestOperationsInnerAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersUserIdPatchRequestOperationsInnerAnyOf1(op string, path string) *UsersUserIdPatchRequestOperationsInnerAnyOf1 {
	this := UsersUserIdPatchRequestOperationsInnerAnyOf1{}
	this.Op = op
	this.Path = path
	return &this
}

// NewUsersUserIdPatchRequestOperationsInnerAnyOf1WithDefaults instantiates a new UsersUserIdPatchRequestOperationsInnerAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersUserIdPatchRequestOperationsInnerAnyOf1WithDefaults() *UsersUserIdPatchRequestOperationsInnerAnyOf1 {
	this := UsersUserIdPatchRequestOperationsInnerAnyOf1{}
	return &this
}

// GetOp returns the Op field value
func (o *UsersUserIdPatchRequestOperationsInnerAnyOf1) GetOp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Op
}

// GetOpOk returns a tuple with the Op field value
// and a boolean to check if the value has been set.
func (o *UsersUserIdPatchRequestOperationsInnerAnyOf1) GetOpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Op, true
}

// SetOp sets field value
func (o *UsersUserIdPatchRequestOperationsInnerAnyOf1) SetOp(v string) {
	o.Op = v
}

// GetPath returns the Path field value
func (o *UsersUserIdPatchRequestOperationsInnerAnyOf1) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *UsersUserIdPatchRequestOperationsInnerAnyOf1) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *UsersUserIdPatchRequestOperationsInnerAnyOf1) SetPath(v string) {
	o.Path = v
}

func (o UsersUserIdPatchRequestOperationsInnerAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersUserIdPatchRequestOperationsInnerAnyOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["op"] = o.Op
	toSerialize["path"] = o.Path

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UsersUserIdPatchRequestOperationsInnerAnyOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"op",
		"path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsersUserIdPatchRequestOperationsInnerAnyOf1 := _UsersUserIdPatchRequestOperationsInnerAnyOf1{}

	err = json.Unmarshal(data, &varUsersUserIdPatchRequestOperationsInnerAnyOf1)

	if err != nil {
		return err
	}

	*o = UsersUserIdPatchRequestOperationsInnerAnyOf1(varUsersUserIdPatchRequestOperationsInnerAnyOf1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "op")
		delete(additionalProperties, "path")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUsersUserIdPatchRequestOperationsInnerAnyOf1 struct {
	value *UsersUserIdPatchRequestOperationsInnerAnyOf1
	isSet bool
}

func (v NullableUsersUserIdPatchRequestOperationsInnerAnyOf1) Get() *UsersUserIdPatchRequestOperationsInnerAnyOf1 {
	return v.value
}

func (v *NullableUsersUserIdPatchRequestOperationsInnerAnyOf1) Set(val *UsersUserIdPatchRequestOperationsInnerAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersUserIdPatchRequestOperationsInnerAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersUserIdPatchRequestOperationsInnerAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersUserIdPatchRequestOperationsInnerAnyOf1(val *UsersUserIdPatchRequestOperationsInnerAnyOf1) *NullableUsersUserIdPatchRequestOperationsInnerAnyOf1 {
	return &NullableUsersUserIdPatchRequestOperationsInnerAnyOf1{value: val, isSet: true}
}

func (v NullableUsersUserIdPatchRequestOperationsInnerAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersUserIdPatchRequestOperationsInnerAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


