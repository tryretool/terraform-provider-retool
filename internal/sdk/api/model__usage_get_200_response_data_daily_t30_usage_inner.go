/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the UsageGet200ResponseDataDailyT30UsageInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsageGet200ResponseDataDailyT30UsageInner{}

// UsageGet200ResponseDataDailyT30UsageInner struct for UsageGet200ResponseDataDailyT30UsageInner
type UsageGet200ResponseDataDailyT30UsageInner struct {
	Day string `json:"day"`
	// The number of distinct applications that were active on the given day
	Maa float32 `json:"maa"`
	// The number of distinct users who were active on the given day
	Mau float32 `json:"mau"`
	AdditionalProperties map[string]interface{}
}

type _UsageGet200ResponseDataDailyT30UsageInner UsageGet200ResponseDataDailyT30UsageInner

// NewUsageGet200ResponseDataDailyT30UsageInner instantiates a new UsageGet200ResponseDataDailyT30UsageInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageGet200ResponseDataDailyT30UsageInner(day string, maa float32, mau float32) *UsageGet200ResponseDataDailyT30UsageInner {
	this := UsageGet200ResponseDataDailyT30UsageInner{}
	this.Day = day
	this.Maa = maa
	this.Mau = mau
	return &this
}

// NewUsageGet200ResponseDataDailyT30UsageInnerWithDefaults instantiates a new UsageGet200ResponseDataDailyT30UsageInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageGet200ResponseDataDailyT30UsageInnerWithDefaults() *UsageGet200ResponseDataDailyT30UsageInner {
	this := UsageGet200ResponseDataDailyT30UsageInner{}
	return &this
}

// GetDay returns the Day field value
func (o *UsageGet200ResponseDataDailyT30UsageInner) GetDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Day
}

// GetDayOk returns a tuple with the Day field value
// and a boolean to check if the value has been set.
func (o *UsageGet200ResponseDataDailyT30UsageInner) GetDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Day, true
}

// SetDay sets field value
func (o *UsageGet200ResponseDataDailyT30UsageInner) SetDay(v string) {
	o.Day = v
}

// GetMaa returns the Maa field value
func (o *UsageGet200ResponseDataDailyT30UsageInner) GetMaa() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Maa
}

// GetMaaOk returns a tuple with the Maa field value
// and a boolean to check if the value has been set.
func (o *UsageGet200ResponseDataDailyT30UsageInner) GetMaaOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Maa, true
}

// SetMaa sets field value
func (o *UsageGet200ResponseDataDailyT30UsageInner) SetMaa(v float32) {
	o.Maa = v
}

// GetMau returns the Mau field value
func (o *UsageGet200ResponseDataDailyT30UsageInner) GetMau() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Mau
}

// GetMauOk returns a tuple with the Mau field value
// and a boolean to check if the value has been set.
func (o *UsageGet200ResponseDataDailyT30UsageInner) GetMauOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mau, true
}

// SetMau sets field value
func (o *UsageGet200ResponseDataDailyT30UsageInner) SetMau(v float32) {
	o.Mau = v
}

func (o UsageGet200ResponseDataDailyT30UsageInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsageGet200ResponseDataDailyT30UsageInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["day"] = o.Day
	toSerialize["maa"] = o.Maa
	toSerialize["mau"] = o.Mau

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UsageGet200ResponseDataDailyT30UsageInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"day",
		"maa",
		"mau",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsageGet200ResponseDataDailyT30UsageInner := _UsageGet200ResponseDataDailyT30UsageInner{}

	err = json.Unmarshal(data, &varUsageGet200ResponseDataDailyT30UsageInner)

	if err != nil {
		return err
	}

	*o = UsageGet200ResponseDataDailyT30UsageInner(varUsageGet200ResponseDataDailyT30UsageInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "day")
		delete(additionalProperties, "maa")
		delete(additionalProperties, "mau")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUsageGet200ResponseDataDailyT30UsageInner struct {
	value *UsageGet200ResponseDataDailyT30UsageInner
	isSet bool
}

func (v NullableUsageGet200ResponseDataDailyT30UsageInner) Get() *UsageGet200ResponseDataDailyT30UsageInner {
	return v.value
}

func (v *NullableUsageGet200ResponseDataDailyT30UsageInner) Set(val *UsageGet200ResponseDataDailyT30UsageInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageGet200ResponseDataDailyT30UsageInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageGet200ResponseDataDailyT30UsageInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageGet200ResponseDataDailyT30UsageInner(val *UsageGet200ResponseDataDailyT30UsageInner) *NullableUsageGet200ResponseDataDailyT30UsageInner {
	return &NullableUsageGet200ResponseDataDailyT30UsageInner{value: val, isSet: true}
}

func (v NullableUsageGet200ResponseDataDailyT30UsageInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageGet200ResponseDataDailyT30UsageInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


