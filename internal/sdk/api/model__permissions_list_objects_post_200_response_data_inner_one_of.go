/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the PermissionsListObjectsPost200ResponseDataInnerOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionsListObjectsPost200ResponseDataInnerOneOf{}

// PermissionsListObjectsPost200ResponseDataInnerOneOf struct for PermissionsListObjectsPost200ResponseDataInnerOneOf
type PermissionsListObjectsPost200ResponseDataInnerOneOf struct {
	Type string `json:"type"`
	// The id of the folder
	Id string `json:"id"`
	// The access level of the folder
	AccessLevel string `json:"access_level"`
	AdditionalProperties map[string]interface{}
}

type _PermissionsListObjectsPost200ResponseDataInnerOneOf PermissionsListObjectsPost200ResponseDataInnerOneOf

// NewPermissionsListObjectsPost200ResponseDataInnerOneOf instantiates a new PermissionsListObjectsPost200ResponseDataInnerOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionsListObjectsPost200ResponseDataInnerOneOf(type_ string, id string, accessLevel string) *PermissionsListObjectsPost200ResponseDataInnerOneOf {
	this := PermissionsListObjectsPost200ResponseDataInnerOneOf{}
	this.Type = type_
	this.Id = id
	this.AccessLevel = accessLevel
	return &this
}

// NewPermissionsListObjectsPost200ResponseDataInnerOneOfWithDefaults instantiates a new PermissionsListObjectsPost200ResponseDataInnerOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionsListObjectsPost200ResponseDataInnerOneOfWithDefaults() *PermissionsListObjectsPost200ResponseDataInnerOneOf {
	this := PermissionsListObjectsPost200ResponseDataInnerOneOf{}
	return &this
}

// GetType returns the Type field value
func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) SetId(v string) {
	o.Id = v
}

// GetAccessLevel returns the AccessLevel field value
func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) GetAccessLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessLevel
}

// GetAccessLevelOk returns a tuple with the AccessLevel field value
// and a boolean to check if the value has been set.
func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) GetAccessLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessLevel, true
}

// SetAccessLevel sets field value
func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) SetAccessLevel(v string) {
	o.AccessLevel = v
}

func (o PermissionsListObjectsPost200ResponseDataInnerOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionsListObjectsPost200ResponseDataInnerOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["id"] = o.Id
	toSerialize["access_level"] = o.AccessLevel

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PermissionsListObjectsPost200ResponseDataInnerOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"id",
		"access_level",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPermissionsListObjectsPost200ResponseDataInnerOneOf := _PermissionsListObjectsPost200ResponseDataInnerOneOf{}

	err = json.Unmarshal(data, &varPermissionsListObjectsPost200ResponseDataInnerOneOf)

	if err != nil {
		return err
	}

	*o = PermissionsListObjectsPost200ResponseDataInnerOneOf(varPermissionsListObjectsPost200ResponseDataInnerOneOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "id")
		delete(additionalProperties, "access_level")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePermissionsListObjectsPost200ResponseDataInnerOneOf struct {
	value *PermissionsListObjectsPost200ResponseDataInnerOneOf
	isSet bool
}

func (v NullablePermissionsListObjectsPost200ResponseDataInnerOneOf) Get() *PermissionsListObjectsPost200ResponseDataInnerOneOf {
	return v.value
}

func (v *NullablePermissionsListObjectsPost200ResponseDataInnerOneOf) Set(val *PermissionsListObjectsPost200ResponseDataInnerOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionsListObjectsPost200ResponseDataInnerOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionsListObjectsPost200ResponseDataInnerOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionsListObjectsPost200ResponseDataInnerOneOf(val *PermissionsListObjectsPost200ResponseDataInnerOneOf) *NullablePermissionsListObjectsPost200ResponseDataInnerOneOf {
	return &NullablePermissionsListObjectsPost200ResponseDataInnerOneOf{value: val, isSet: true}
}

func (v NullablePermissionsListObjectsPost200ResponseDataInnerOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionsListObjectsPost200ResponseDataInnerOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


