/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the GroupsGroupIdMembersPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupsGroupIdMembersPostRequest{}

// GroupsGroupIdMembersPostRequest Users to add to the group
type GroupsGroupIdMembersPostRequest struct {
	Members []GroupsGroupIdPutRequestMembersInner `json:"members"`
	AdditionalProperties map[string]interface{}
}

type _GroupsGroupIdMembersPostRequest GroupsGroupIdMembersPostRequest

// NewGroupsGroupIdMembersPostRequest instantiates a new GroupsGroupIdMembersPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupsGroupIdMembersPostRequest(members []GroupsGroupIdPutRequestMembersInner) *GroupsGroupIdMembersPostRequest {
	this := GroupsGroupIdMembersPostRequest{}
	this.Members = members
	return &this
}

// NewGroupsGroupIdMembersPostRequestWithDefaults instantiates a new GroupsGroupIdMembersPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupsGroupIdMembersPostRequestWithDefaults() *GroupsGroupIdMembersPostRequest {
	this := GroupsGroupIdMembersPostRequest{}
	return &this
}

// GetMembers returns the Members field value
func (o *GroupsGroupIdMembersPostRequest) GetMembers() []GroupsGroupIdPutRequestMembersInner {
	if o == nil {
		var ret []GroupsGroupIdPutRequestMembersInner
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *GroupsGroupIdMembersPostRequest) GetMembersOk() ([]GroupsGroupIdPutRequestMembersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Members, true
}

// SetMembers sets field value
func (o *GroupsGroupIdMembersPostRequest) SetMembers(v []GroupsGroupIdPutRequestMembersInner) {
	o.Members = v
}

func (o GroupsGroupIdMembersPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupsGroupIdMembersPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["members"] = o.Members

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GroupsGroupIdMembersPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"members",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGroupsGroupIdMembersPostRequest := _GroupsGroupIdMembersPostRequest{}

	err = json.Unmarshal(data, &varGroupsGroupIdMembersPostRequest)

	if err != nil {
		return err
	}

	*o = GroupsGroupIdMembersPostRequest(varGroupsGroupIdMembersPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "members")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGroupsGroupIdMembersPostRequest struct {
	value *GroupsGroupIdMembersPostRequest
	isSet bool
}

func (v NullableGroupsGroupIdMembersPostRequest) Get() *GroupsGroupIdMembersPostRequest {
	return v.value
}

func (v *NullableGroupsGroupIdMembersPostRequest) Set(val *GroupsGroupIdMembersPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupsGroupIdMembersPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupsGroupIdMembersPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupsGroupIdMembersPostRequest(val *GroupsGroupIdMembersPostRequest) *NullableGroupsGroupIdMembersPostRequest {
	return &NullableGroupsGroupIdMembersPostRequest{value: val, isSet: true}
}

func (v NullableGroupsGroupIdMembersPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupsGroupIdMembersPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


