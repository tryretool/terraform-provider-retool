/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CustomComponentLibraryRevision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomComponentLibraryRevision{}

// CustomComponentLibraryRevision Custom Component Library Revision
type CustomComponentLibraryRevision struct {
	Id string `json:"id"`
	Version string `json:"version"`
	CustomComponentLibraryId string `json:"custom_component_library_id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _CustomComponentLibraryRevision CustomComponentLibraryRevision

// NewCustomComponentLibraryRevision instantiates a new CustomComponentLibraryRevision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomComponentLibraryRevision(id string, version string, customComponentLibraryId string, createdAt time.Time, updatedAt time.Time) *CustomComponentLibraryRevision {
	this := CustomComponentLibraryRevision{}
	this.Id = id
	this.Version = version
	this.CustomComponentLibraryId = customComponentLibraryId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewCustomComponentLibraryRevisionWithDefaults instantiates a new CustomComponentLibraryRevision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomComponentLibraryRevisionWithDefaults() *CustomComponentLibraryRevision {
	this := CustomComponentLibraryRevision{}
	return &this
}

// GetId returns the Id field value
func (o *CustomComponentLibraryRevision) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomComponentLibraryRevision) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomComponentLibraryRevision) SetId(v string) {
	o.Id = v
}

// GetVersion returns the Version field value
func (o *CustomComponentLibraryRevision) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *CustomComponentLibraryRevision) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *CustomComponentLibraryRevision) SetVersion(v string) {
	o.Version = v
}

// GetCustomComponentLibraryId returns the CustomComponentLibraryId field value
func (o *CustomComponentLibraryRevision) GetCustomComponentLibraryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomComponentLibraryId
}

// GetCustomComponentLibraryIdOk returns a tuple with the CustomComponentLibraryId field value
// and a boolean to check if the value has been set.
func (o *CustomComponentLibraryRevision) GetCustomComponentLibraryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomComponentLibraryId, true
}

// SetCustomComponentLibraryId sets field value
func (o *CustomComponentLibraryRevision) SetCustomComponentLibraryId(v string) {
	o.CustomComponentLibraryId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CustomComponentLibraryRevision) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CustomComponentLibraryRevision) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CustomComponentLibraryRevision) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CustomComponentLibraryRevision) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CustomComponentLibraryRevision) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CustomComponentLibraryRevision) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o CustomComponentLibraryRevision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomComponentLibraryRevision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["version"] = o.Version
	toSerialize["custom_component_library_id"] = o.CustomComponentLibraryId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomComponentLibraryRevision) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"version",
		"custom_component_library_id",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomComponentLibraryRevision := _CustomComponentLibraryRevision{}

	err = json.Unmarshal(data, &varCustomComponentLibraryRevision)

	if err != nil {
		return err
	}

	*o = CustomComponentLibraryRevision(varCustomComponentLibraryRevision)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "version")
		delete(additionalProperties, "custom_component_library_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomComponentLibraryRevision struct {
	value *CustomComponentLibraryRevision
	isSet bool
}

func (v NullableCustomComponentLibraryRevision) Get() *CustomComponentLibraryRevision {
	return v.value
}

func (v *NullableCustomComponentLibraryRevision) Set(val *CustomComponentLibraryRevision) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomComponentLibraryRevision) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomComponentLibraryRevision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomComponentLibraryRevision(val *CustomComponentLibraryRevision) *NullableCustomComponentLibraryRevision {
	return &NullableCustomComponentLibraryRevision{value: val, isSet: true}
}

func (v NullableCustomComponentLibraryRevision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomComponentLibraryRevision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


