/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the SourceControlTestDeployPostRequestDeployParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceControlTestDeployPostRequestDeployParams{}

// SourceControlTestDeployPostRequestDeployParams struct for SourceControlTestDeployPostRequestDeployParams
type SourceControlTestDeployPostRequestDeployParams struct {
	// The commit SHA to dry deploy
	CommitSha string `json:"commit_sha"`
	IsFullSync *bool `json:"is_full_sync,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SourceControlTestDeployPostRequestDeployParams SourceControlTestDeployPostRequestDeployParams

// NewSourceControlTestDeployPostRequestDeployParams instantiates a new SourceControlTestDeployPostRequestDeployParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceControlTestDeployPostRequestDeployParams(commitSha string) *SourceControlTestDeployPostRequestDeployParams {
	this := SourceControlTestDeployPostRequestDeployParams{}
	this.CommitSha = commitSha
	return &this
}

// NewSourceControlTestDeployPostRequestDeployParamsWithDefaults instantiates a new SourceControlTestDeployPostRequestDeployParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceControlTestDeployPostRequestDeployParamsWithDefaults() *SourceControlTestDeployPostRequestDeployParams {
	this := SourceControlTestDeployPostRequestDeployParams{}
	return &this
}

// GetCommitSha returns the CommitSha field value
func (o *SourceControlTestDeployPostRequestDeployParams) GetCommitSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommitSha
}

// GetCommitShaOk returns a tuple with the CommitSha field value
// and a boolean to check if the value has been set.
func (o *SourceControlTestDeployPostRequestDeployParams) GetCommitShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommitSha, true
}

// SetCommitSha sets field value
func (o *SourceControlTestDeployPostRequestDeployParams) SetCommitSha(v string) {
	o.CommitSha = v
}

// GetIsFullSync returns the IsFullSync field value if set, zero value otherwise.
func (o *SourceControlTestDeployPostRequestDeployParams) GetIsFullSync() bool {
	if o == nil || IsNil(o.IsFullSync) {
		var ret bool
		return ret
	}
	return *o.IsFullSync
}

// GetIsFullSyncOk returns a tuple with the IsFullSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceControlTestDeployPostRequestDeployParams) GetIsFullSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFullSync) {
		return nil, false
	}
	return o.IsFullSync, true
}

// HasIsFullSync returns a boolean if a field has been set.
func (o *SourceControlTestDeployPostRequestDeployParams) HasIsFullSync() bool {
	if o != nil && !IsNil(o.IsFullSync) {
		return true
	}

	return false
}

// SetIsFullSync gets a reference to the given bool and assigns it to the IsFullSync field.
func (o *SourceControlTestDeployPostRequestDeployParams) SetIsFullSync(v bool) {
	o.IsFullSync = &v
}

func (o SourceControlTestDeployPostRequestDeployParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceControlTestDeployPostRequestDeployParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["commit_sha"] = o.CommitSha
	if !IsNil(o.IsFullSync) {
		toSerialize["is_full_sync"] = o.IsFullSync
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SourceControlTestDeployPostRequestDeployParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"commit_sha",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSourceControlTestDeployPostRequestDeployParams := _SourceControlTestDeployPostRequestDeployParams{}

	err = json.Unmarshal(data, &varSourceControlTestDeployPostRequestDeployParams)

	if err != nil {
		return err
	}

	*o = SourceControlTestDeployPostRequestDeployParams(varSourceControlTestDeployPostRequestDeployParams)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "commit_sha")
		delete(additionalProperties, "is_full_sync")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSourceControlTestDeployPostRequestDeployParams struct {
	value *SourceControlTestDeployPostRequestDeployParams
	isSet bool
}

func (v NullableSourceControlTestDeployPostRequestDeployParams) Get() *SourceControlTestDeployPostRequestDeployParams {
	return v.value
}

func (v *NullableSourceControlTestDeployPostRequestDeployParams) Set(val *SourceControlTestDeployPostRequestDeployParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceControlTestDeployPostRequestDeployParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceControlTestDeployPostRequestDeployParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceControlTestDeployPostRequestDeployParams(val *SourceControlTestDeployPostRequestDeployParams) *NullableSourceControlTestDeployPostRequestDeployParams {
	return &NullableSourceControlTestDeployPostRequestDeployParams{value: val, isSet: true}
}

func (v NullableSourceControlTestDeployPostRequestDeployParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceControlTestDeployPostRequestDeployParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


