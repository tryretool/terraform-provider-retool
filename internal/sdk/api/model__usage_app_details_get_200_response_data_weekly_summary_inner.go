/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsageAppDetailsGet200ResponseDataWeeklySummaryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsageAppDetailsGet200ResponseDataWeeklySummaryInner{}

// UsageAppDetailsGet200ResponseDataWeeklySummaryInner struct for UsageAppDetailsGet200ResponseDataWeeklySummaryInner
type UsageAppDetailsGet200ResponseDataWeeklySummaryInner struct {
	OrgId string `json:"org_id"`
	WeeklyData []UsageAppDetailsGet200ResponseDataWeeklySummaryInnerWeeklyDataInner `json:"weekly_data"`
}

type _UsageAppDetailsGet200ResponseDataWeeklySummaryInner UsageAppDetailsGet200ResponseDataWeeklySummaryInner

// NewUsageAppDetailsGet200ResponseDataWeeklySummaryInner instantiates a new UsageAppDetailsGet200ResponseDataWeeklySummaryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageAppDetailsGet200ResponseDataWeeklySummaryInner(orgId string, weeklyData []UsageAppDetailsGet200ResponseDataWeeklySummaryInnerWeeklyDataInner) *UsageAppDetailsGet200ResponseDataWeeklySummaryInner {
	this := UsageAppDetailsGet200ResponseDataWeeklySummaryInner{}
	this.OrgId = orgId
	this.WeeklyData = weeklyData
	return &this
}

// NewUsageAppDetailsGet200ResponseDataWeeklySummaryInnerWithDefaults instantiates a new UsageAppDetailsGet200ResponseDataWeeklySummaryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageAppDetailsGet200ResponseDataWeeklySummaryInnerWithDefaults() *UsageAppDetailsGet200ResponseDataWeeklySummaryInner {
	this := UsageAppDetailsGet200ResponseDataWeeklySummaryInner{}
	return &this
}

// GetOrgId returns the OrgId field value
func (o *UsageAppDetailsGet200ResponseDataWeeklySummaryInner) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *UsageAppDetailsGet200ResponseDataWeeklySummaryInner) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *UsageAppDetailsGet200ResponseDataWeeklySummaryInner) SetOrgId(v string) {
	o.OrgId = v
}

// GetWeeklyData returns the WeeklyData field value
func (o *UsageAppDetailsGet200ResponseDataWeeklySummaryInner) GetWeeklyData() []UsageAppDetailsGet200ResponseDataWeeklySummaryInnerWeeklyDataInner {
	if o == nil {
		var ret []UsageAppDetailsGet200ResponseDataWeeklySummaryInnerWeeklyDataInner
		return ret
	}

	return o.WeeklyData
}

// GetWeeklyDataOk returns a tuple with the WeeklyData field value
// and a boolean to check if the value has been set.
func (o *UsageAppDetailsGet200ResponseDataWeeklySummaryInner) GetWeeklyDataOk() ([]UsageAppDetailsGet200ResponseDataWeeklySummaryInnerWeeklyDataInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.WeeklyData, true
}

// SetWeeklyData sets field value
func (o *UsageAppDetailsGet200ResponseDataWeeklySummaryInner) SetWeeklyData(v []UsageAppDetailsGet200ResponseDataWeeklySummaryInnerWeeklyDataInner) {
	o.WeeklyData = v
}

func (o UsageAppDetailsGet200ResponseDataWeeklySummaryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsageAppDetailsGet200ResponseDataWeeklySummaryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["org_id"] = o.OrgId
	toSerialize["weekly_data"] = o.WeeklyData
	return toSerialize, nil
}

func (o *UsageAppDetailsGet200ResponseDataWeeklySummaryInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"org_id",
		"weekly_data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsageAppDetailsGet200ResponseDataWeeklySummaryInner := _UsageAppDetailsGet200ResponseDataWeeklySummaryInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsageAppDetailsGet200ResponseDataWeeklySummaryInner)

	if err != nil {
		return err
	}

	*o = UsageAppDetailsGet200ResponseDataWeeklySummaryInner(varUsageAppDetailsGet200ResponseDataWeeklySummaryInner)

	return err
}

type NullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner struct {
	value *UsageAppDetailsGet200ResponseDataWeeklySummaryInner
	isSet bool
}

func (v NullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner) Get() *UsageAppDetailsGet200ResponseDataWeeklySummaryInner {
	return v.value
}

func (v *NullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner) Set(val *UsageAppDetailsGet200ResponseDataWeeklySummaryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner(val *UsageAppDetailsGet200ResponseDataWeeklySummaryInner) *NullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner {
	return &NullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner{value: val, isSet: true}
}

func (v NullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageAppDetailsGet200ResponseDataWeeklySummaryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


