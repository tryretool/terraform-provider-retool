/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the UserAttributesGet200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAttributesGet200ResponseDataInner{}

// UserAttributesGet200ResponseDataInner This object represents user attributes.
type UserAttributesGet200ResponseDataInner struct {
	// The id of the user attribute
	Id string `json:"id"`
	// The name of the user attribute
	Name string `json:"name"`
	// The label of the user attribute
	Label string `json:"label"`
	// The data type of the user attribute. One of types `string`, `number`, or `json`
	DataType string `json:"data_type"`
	// The default value of the user attribute, assigned to all users without the attribute set
	DefaultValue NullableString `json:"default_value"`
	// The name of the Intercom user attribute that this attribute should be mapped to
	IntercomAttributeName NullableString `json:"intercom_attribute_name"`
	AdditionalProperties map[string]interface{}
}

type _UserAttributesGet200ResponseDataInner UserAttributesGet200ResponseDataInner

// NewUserAttributesGet200ResponseDataInner instantiates a new UserAttributesGet200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAttributesGet200ResponseDataInner(id string, name string, label string, dataType string, defaultValue NullableString, intercomAttributeName NullableString) *UserAttributesGet200ResponseDataInner {
	this := UserAttributesGet200ResponseDataInner{}
	this.Id = id
	this.Name = name
	this.Label = label
	this.DataType = dataType
	this.DefaultValue = defaultValue
	this.IntercomAttributeName = intercomAttributeName
	return &this
}

// NewUserAttributesGet200ResponseDataInnerWithDefaults instantiates a new UserAttributesGet200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAttributesGet200ResponseDataInnerWithDefaults() *UserAttributesGet200ResponseDataInner {
	this := UserAttributesGet200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value
func (o *UserAttributesGet200ResponseDataInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserAttributesGet200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserAttributesGet200ResponseDataInner) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *UserAttributesGet200ResponseDataInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UserAttributesGet200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UserAttributesGet200ResponseDataInner) SetName(v string) {
	o.Name = v
}

// GetLabel returns the Label field value
func (o *UserAttributesGet200ResponseDataInner) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *UserAttributesGet200ResponseDataInner) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *UserAttributesGet200ResponseDataInner) SetLabel(v string) {
	o.Label = v
}

// GetDataType returns the DataType field value
func (o *UserAttributesGet200ResponseDataInner) GetDataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value
// and a boolean to check if the value has been set.
func (o *UserAttributesGet200ResponseDataInner) GetDataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataType, true
}

// SetDataType sets field value
func (o *UserAttributesGet200ResponseDataInner) SetDataType(v string) {
	o.DataType = v
}

// GetDefaultValue returns the DefaultValue field value
// If the value is explicit nil, the zero value for string will be returned
func (o *UserAttributesGet200ResponseDataInner) GetDefaultValue() string {
	if o == nil || o.DefaultValue.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultValue.Get()
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAttributesGet200ResponseDataInner) GetDefaultValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultValue.Get(), o.DefaultValue.IsSet()
}

// SetDefaultValue sets field value
func (o *UserAttributesGet200ResponseDataInner) SetDefaultValue(v string) {
	o.DefaultValue.Set(&v)
}

// GetIntercomAttributeName returns the IntercomAttributeName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *UserAttributesGet200ResponseDataInner) GetIntercomAttributeName() string {
	if o == nil || o.IntercomAttributeName.Get() == nil {
		var ret string
		return ret
	}

	return *o.IntercomAttributeName.Get()
}

// GetIntercomAttributeNameOk returns a tuple with the IntercomAttributeName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAttributesGet200ResponseDataInner) GetIntercomAttributeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntercomAttributeName.Get(), o.IntercomAttributeName.IsSet()
}

// SetIntercomAttributeName sets field value
func (o *UserAttributesGet200ResponseDataInner) SetIntercomAttributeName(v string) {
	o.IntercomAttributeName.Set(&v)
}

func (o UserAttributesGet200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAttributesGet200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["label"] = o.Label
	toSerialize["data_type"] = o.DataType
	toSerialize["default_value"] = o.DefaultValue.Get()
	toSerialize["intercom_attribute_name"] = o.IntercomAttributeName.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UserAttributesGet200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"label",
		"data_type",
		"default_value",
		"intercom_attribute_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserAttributesGet200ResponseDataInner := _UserAttributesGet200ResponseDataInner{}

	err = json.Unmarshal(data, &varUserAttributesGet200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = UserAttributesGet200ResponseDataInner(varUserAttributesGet200ResponseDataInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "label")
		delete(additionalProperties, "data_type")
		delete(additionalProperties, "default_value")
		delete(additionalProperties, "intercom_attribute_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserAttributesGet200ResponseDataInner struct {
	value *UserAttributesGet200ResponseDataInner
	isSet bool
}

func (v NullableUserAttributesGet200ResponseDataInner) Get() *UserAttributesGet200ResponseDataInner {
	return v.value
}

func (v *NullableUserAttributesGet200ResponseDataInner) Set(val *UserAttributesGet200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAttributesGet200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAttributesGet200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAttributesGet200ResponseDataInner(val *UserAttributesGet200ResponseDataInner) *NullableUserAttributesGet200ResponseDataInner {
	return &NullableUserAttributesGet200ResponseDataInner{value: val, isSet: true}
}

func (v NullableUserAttributesGet200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAttributesGet200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


