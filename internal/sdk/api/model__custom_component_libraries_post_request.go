/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomComponentLibrariesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomComponentLibrariesPostRequest{}

// CustomComponentLibrariesPostRequest struct for CustomComponentLibrariesPostRequest
type CustomComponentLibrariesPostRequest struct {
	// Specifies a specific id to use for the library. Used for syncronizing libraries across Retool Instances.
	Id *string `json:"id,omitempty"`
	// How the library will be referred to in Toolscript, and other code based usages.
	Name string `json:"name"`
	Description NullableString `json:"description"`
	// How the library will be referred to in the Retool UI. Should be human readable.
	Label string `json:"label"`
	AdditionalProperties map[string]interface{}
}

type _CustomComponentLibrariesPostRequest CustomComponentLibrariesPostRequest

// NewCustomComponentLibrariesPostRequest instantiates a new CustomComponentLibrariesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomComponentLibrariesPostRequest(name string, description NullableString, label string) *CustomComponentLibrariesPostRequest {
	this := CustomComponentLibrariesPostRequest{}
	this.Name = name
	this.Description = description
	this.Label = label
	return &this
}

// NewCustomComponentLibrariesPostRequestWithDefaults instantiates a new CustomComponentLibrariesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomComponentLibrariesPostRequestWithDefaults() *CustomComponentLibrariesPostRequest {
	this := CustomComponentLibrariesPostRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomComponentLibrariesPostRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomComponentLibrariesPostRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomComponentLibrariesPostRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomComponentLibrariesPostRequest) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *CustomComponentLibrariesPostRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomComponentLibrariesPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomComponentLibrariesPostRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CustomComponentLibrariesPostRequest) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomComponentLibrariesPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *CustomComponentLibrariesPostRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetLabel returns the Label field value
func (o *CustomComponentLibrariesPostRequest) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *CustomComponentLibrariesPostRequest) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *CustomComponentLibrariesPostRequest) SetLabel(v string) {
	o.Label = v
}

func (o CustomComponentLibrariesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomComponentLibrariesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description.Get()
	toSerialize["label"] = o.Label

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomComponentLibrariesPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
		"label",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomComponentLibrariesPostRequest := _CustomComponentLibrariesPostRequest{}

	err = json.Unmarshal(data, &varCustomComponentLibrariesPostRequest)

	if err != nil {
		return err
	}

	*o = CustomComponentLibrariesPostRequest(varCustomComponentLibrariesPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "label")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomComponentLibrariesPostRequest struct {
	value *CustomComponentLibrariesPostRequest
	isSet bool
}

func (v NullableCustomComponentLibrariesPostRequest) Get() *CustomComponentLibrariesPostRequest {
	return v.value
}

func (v *NullableCustomComponentLibrariesPostRequest) Set(val *CustomComponentLibrariesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomComponentLibrariesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomComponentLibrariesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomComponentLibrariesPostRequest(val *CustomComponentLibrariesPostRequest) *NullableCustomComponentLibrariesPostRequest {
	return &NullableCustomComponentLibrariesPostRequest{value: val, isSet: true}
}

func (v NullableCustomComponentLibrariesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomComponentLibrariesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


