/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// FoldersFolderIdPatchRequestOperationsInner struct for FoldersFolderIdPatchRequestOperationsInner
type FoldersFolderIdPatchRequestOperationsInner struct {
	FoldersFolderIdPatchRequestOperationsInnerAnyOf *FoldersFolderIdPatchRequestOperationsInnerAnyOf
	FoldersFolderIdPatchRequestOperationsInnerAnyOf1 *FoldersFolderIdPatchRequestOperationsInnerAnyOf1
	FoldersFolderIdPatchRequestOperationsInnerAnyOf2 *FoldersFolderIdPatchRequestOperationsInnerAnyOf2
	UsersUserIdPatchRequestOperationsInnerAnyOf *UsersUserIdPatchRequestOperationsInnerAnyOf
	UsersUserIdPatchRequestOperationsInnerAnyOf1 *UsersUserIdPatchRequestOperationsInnerAnyOf1
	UsersUserIdPatchRequestOperationsInnerAnyOf2 *UsersUserIdPatchRequestOperationsInnerAnyOf2
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *FoldersFolderIdPatchRequestOperationsInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into FoldersFolderIdPatchRequestOperationsInnerAnyOf
	err = json.Unmarshal(data, &dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf);
	if err == nil {
		jsonFoldersFolderIdPatchRequestOperationsInnerAnyOf, _ := json.Marshal(dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf)
		if string(jsonFoldersFolderIdPatchRequestOperationsInnerAnyOf) == "{}" { // empty struct
			dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf = nil
		} else {
			return nil // data stored in dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf, return on the first match
		}
	} else {
		dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf = nil
	}

	// try to unmarshal JSON data into FoldersFolderIdPatchRequestOperationsInnerAnyOf1
	err = json.Unmarshal(data, &dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf1);
	if err == nil {
		jsonFoldersFolderIdPatchRequestOperationsInnerAnyOf1, _ := json.Marshal(dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf1)
		if string(jsonFoldersFolderIdPatchRequestOperationsInnerAnyOf1) == "{}" { // empty struct
			dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf1 = nil
		} else {
			return nil // data stored in dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf1, return on the first match
		}
	} else {
		dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf1 = nil
	}

	// try to unmarshal JSON data into FoldersFolderIdPatchRequestOperationsInnerAnyOf2
	err = json.Unmarshal(data, &dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf2);
	if err == nil {
		jsonFoldersFolderIdPatchRequestOperationsInnerAnyOf2, _ := json.Marshal(dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf2)
		if string(jsonFoldersFolderIdPatchRequestOperationsInnerAnyOf2) == "{}" { // empty struct
			dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf2 = nil
		} else {
			return nil // data stored in dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf2, return on the first match
		}
	} else {
		dst.FoldersFolderIdPatchRequestOperationsInnerAnyOf2 = nil
	}

	// try to unmarshal JSON data into UsersUserIdPatchRequestOperationsInnerAnyOf
	err = json.Unmarshal(data, &dst.UsersUserIdPatchRequestOperationsInnerAnyOf);
	if err == nil {
		jsonUsersUserIdPatchRequestOperationsInnerAnyOf, _ := json.Marshal(dst.UsersUserIdPatchRequestOperationsInnerAnyOf)
		if string(jsonUsersUserIdPatchRequestOperationsInnerAnyOf) == "{}" { // empty struct
			dst.UsersUserIdPatchRequestOperationsInnerAnyOf = nil
		} else {
			return nil // data stored in dst.UsersUserIdPatchRequestOperationsInnerAnyOf, return on the first match
		}
	} else {
		dst.UsersUserIdPatchRequestOperationsInnerAnyOf = nil
	}

	// try to unmarshal JSON data into UsersUserIdPatchRequestOperationsInnerAnyOf1
	err = json.Unmarshal(data, &dst.UsersUserIdPatchRequestOperationsInnerAnyOf1);
	if err == nil {
		jsonUsersUserIdPatchRequestOperationsInnerAnyOf1, _ := json.Marshal(dst.UsersUserIdPatchRequestOperationsInnerAnyOf1)
		if string(jsonUsersUserIdPatchRequestOperationsInnerAnyOf1) == "{}" { // empty struct
			dst.UsersUserIdPatchRequestOperationsInnerAnyOf1 = nil
		} else {
			return nil // data stored in dst.UsersUserIdPatchRequestOperationsInnerAnyOf1, return on the first match
		}
	} else {
		dst.UsersUserIdPatchRequestOperationsInnerAnyOf1 = nil
	}

	// try to unmarshal JSON data into UsersUserIdPatchRequestOperationsInnerAnyOf2
	err = json.Unmarshal(data, &dst.UsersUserIdPatchRequestOperationsInnerAnyOf2);
	if err == nil {
		jsonUsersUserIdPatchRequestOperationsInnerAnyOf2, _ := json.Marshal(dst.UsersUserIdPatchRequestOperationsInnerAnyOf2)
		if string(jsonUsersUserIdPatchRequestOperationsInnerAnyOf2) == "{}" { // empty struct
			dst.UsersUserIdPatchRequestOperationsInnerAnyOf2 = nil
		} else {
			return nil // data stored in dst.UsersUserIdPatchRequestOperationsInnerAnyOf2, return on the first match
		}
	} else {
		dst.UsersUserIdPatchRequestOperationsInnerAnyOf2 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(FoldersFolderIdPatchRequestOperationsInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *FoldersFolderIdPatchRequestOperationsInner) MarshalJSON() ([]byte, error) {
	if src.FoldersFolderIdPatchRequestOperationsInnerAnyOf != nil {
		return json.Marshal(&src.FoldersFolderIdPatchRequestOperationsInnerAnyOf)
	}

	if src.FoldersFolderIdPatchRequestOperationsInnerAnyOf1 != nil {
		return json.Marshal(&src.FoldersFolderIdPatchRequestOperationsInnerAnyOf1)
	}

	if src.FoldersFolderIdPatchRequestOperationsInnerAnyOf2 != nil {
		return json.Marshal(&src.FoldersFolderIdPatchRequestOperationsInnerAnyOf2)
	}

	if src.UsersUserIdPatchRequestOperationsInnerAnyOf != nil {
		return json.Marshal(&src.UsersUserIdPatchRequestOperationsInnerAnyOf)
	}

	if src.UsersUserIdPatchRequestOperationsInnerAnyOf1 != nil {
		return json.Marshal(&src.UsersUserIdPatchRequestOperationsInnerAnyOf1)
	}

	if src.UsersUserIdPatchRequestOperationsInnerAnyOf2 != nil {
		return json.Marshal(&src.UsersUserIdPatchRequestOperationsInnerAnyOf2)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableFoldersFolderIdPatchRequestOperationsInner struct {
	value *FoldersFolderIdPatchRequestOperationsInner
	isSet bool
}

func (v NullableFoldersFolderIdPatchRequestOperationsInner) Get() *FoldersFolderIdPatchRequestOperationsInner {
	return v.value
}

func (v *NullableFoldersFolderIdPatchRequestOperationsInner) Set(val *FoldersFolderIdPatchRequestOperationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFoldersFolderIdPatchRequestOperationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFoldersFolderIdPatchRequestOperationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFoldersFolderIdPatchRequestOperationsInner(val *FoldersFolderIdPatchRequestOperationsInner) *NullableFoldersFolderIdPatchRequestOperationsInner {
	return &NullableFoldersFolderIdPatchRequestOperationsInner{value: val, isSet: true}
}

func (v NullableFoldersFolderIdPatchRequestOperationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFoldersFolderIdPatchRequestOperationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


