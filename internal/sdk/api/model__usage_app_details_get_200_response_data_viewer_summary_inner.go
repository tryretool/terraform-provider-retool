/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsageAppDetailsGet200ResponseDataViewerSummaryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsageAppDetailsGet200ResponseDataViewerSummaryInner{}

// UsageAppDetailsGet200ResponseDataViewerSummaryInner struct for UsageAppDetailsGet200ResponseDataViewerSummaryInner
type UsageAppDetailsGet200ResponseDataViewerSummaryInner struct {
	Email string `json:"email"`
	Count float32 `json:"count"`
	UserId string `json:"user_id"`
	OrgId string `json:"org_id"`
	Host string `json:"host"`
}

type _UsageAppDetailsGet200ResponseDataViewerSummaryInner UsageAppDetailsGet200ResponseDataViewerSummaryInner

// NewUsageAppDetailsGet200ResponseDataViewerSummaryInner instantiates a new UsageAppDetailsGet200ResponseDataViewerSummaryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageAppDetailsGet200ResponseDataViewerSummaryInner(email string, count float32, userId string, orgId string, host string) *UsageAppDetailsGet200ResponseDataViewerSummaryInner {
	this := UsageAppDetailsGet200ResponseDataViewerSummaryInner{}
	this.Email = email
	this.Count = count
	this.UserId = userId
	this.OrgId = orgId
	this.Host = host
	return &this
}

// NewUsageAppDetailsGet200ResponseDataViewerSummaryInnerWithDefaults instantiates a new UsageAppDetailsGet200ResponseDataViewerSummaryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageAppDetailsGet200ResponseDataViewerSummaryInnerWithDefaults() *UsageAppDetailsGet200ResponseDataViewerSummaryInner {
	this := UsageAppDetailsGet200ResponseDataViewerSummaryInner{}
	return &this
}

// GetEmail returns the Email field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) SetEmail(v string) {
	o.Email = v
}

// GetCount returns the Count field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) SetCount(v float32) {
	o.Count = v
}

// GetUserId returns the UserId field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) SetUserId(v string) {
	o.UserId = v
}

// GetOrgId returns the OrgId field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) SetOrgId(v string) {
	o.OrgId = v
}

// GetHost returns the Host field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) SetHost(v string) {
	o.Host = v
}

func (o UsageAppDetailsGet200ResponseDataViewerSummaryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsageAppDetailsGet200ResponseDataViewerSummaryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["count"] = o.Count
	toSerialize["user_id"] = o.UserId
	toSerialize["org_id"] = o.OrgId
	toSerialize["host"] = o.Host
	return toSerialize, nil
}

func (o *UsageAppDetailsGet200ResponseDataViewerSummaryInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"count",
		"user_id",
		"org_id",
		"host",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsageAppDetailsGet200ResponseDataViewerSummaryInner := _UsageAppDetailsGet200ResponseDataViewerSummaryInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsageAppDetailsGet200ResponseDataViewerSummaryInner)

	if err != nil {
		return err
	}

	*o = UsageAppDetailsGet200ResponseDataViewerSummaryInner(varUsageAppDetailsGet200ResponseDataViewerSummaryInner)

	return err
}

type NullableUsageAppDetailsGet200ResponseDataViewerSummaryInner struct {
	value *UsageAppDetailsGet200ResponseDataViewerSummaryInner
	isSet bool
}

func (v NullableUsageAppDetailsGet200ResponseDataViewerSummaryInner) Get() *UsageAppDetailsGet200ResponseDataViewerSummaryInner {
	return v.value
}

func (v *NullableUsageAppDetailsGet200ResponseDataViewerSummaryInner) Set(val *UsageAppDetailsGet200ResponseDataViewerSummaryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageAppDetailsGet200ResponseDataViewerSummaryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageAppDetailsGet200ResponseDataViewerSummaryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageAppDetailsGet200ResponseDataViewerSummaryInner(val *UsageAppDetailsGet200ResponseDataViewerSummaryInner) *NullableUsageAppDetailsGet200ResponseDataViewerSummaryInner {
	return &NullableUsageAppDetailsGet200ResponseDataViewerSummaryInner{value: val, isSet: true}
}

func (v NullableUsageAppDetailsGet200ResponseDataViewerSummaryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageAppDetailsGet200ResponseDataViewerSummaryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


