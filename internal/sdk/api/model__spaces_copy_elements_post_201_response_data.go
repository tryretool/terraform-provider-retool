/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the SpacesCopyElementsPost201ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpacesCopyElementsPost201ResponseData{}

// SpacesCopyElementsPost201ResponseData The copied elements
type SpacesCopyElementsPost201ResponseData struct {
	// The uuids of the copied resources.
	ResourceIds []SpacesCopyElementsPostRequestResourceIdsInner `json:"resource_ids"`
	// The uuids of the copied query library queries.
	QueryLibraryQueryIds []string `json:"query_library_query_ids"`
	// The uuids of the copied app or modules.
	AppIds []string `json:"app_ids"`
	// The uuids of the copied workflows.
	WorkflowIds []string `json:"workflow_ids"`
	AdditionalProperties map[string]interface{}
}

type _SpacesCopyElementsPost201ResponseData SpacesCopyElementsPost201ResponseData

// NewSpacesCopyElementsPost201ResponseData instantiates a new SpacesCopyElementsPost201ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpacesCopyElementsPost201ResponseData(resourceIds []SpacesCopyElementsPostRequestResourceIdsInner, queryLibraryQueryIds []string, appIds []string, workflowIds []string) *SpacesCopyElementsPost201ResponseData {
	this := SpacesCopyElementsPost201ResponseData{}
	this.ResourceIds = resourceIds
	this.QueryLibraryQueryIds = queryLibraryQueryIds
	this.AppIds = appIds
	this.WorkflowIds = workflowIds
	return &this
}

// NewSpacesCopyElementsPost201ResponseDataWithDefaults instantiates a new SpacesCopyElementsPost201ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpacesCopyElementsPost201ResponseDataWithDefaults() *SpacesCopyElementsPost201ResponseData {
	this := SpacesCopyElementsPost201ResponseData{}
	return &this
}

// GetResourceIds returns the ResourceIds field value
func (o *SpacesCopyElementsPost201ResponseData) GetResourceIds() []SpacesCopyElementsPostRequestResourceIdsInner {
	if o == nil {
		var ret []SpacesCopyElementsPostRequestResourceIdsInner
		return ret
	}

	return o.ResourceIds
}

// GetResourceIdsOk returns a tuple with the ResourceIds field value
// and a boolean to check if the value has been set.
func (o *SpacesCopyElementsPost201ResponseData) GetResourceIdsOk() ([]SpacesCopyElementsPostRequestResourceIdsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceIds, true
}

// SetResourceIds sets field value
func (o *SpacesCopyElementsPost201ResponseData) SetResourceIds(v []SpacesCopyElementsPostRequestResourceIdsInner) {
	o.ResourceIds = v
}

// GetQueryLibraryQueryIds returns the QueryLibraryQueryIds field value
func (o *SpacesCopyElementsPost201ResponseData) GetQueryLibraryQueryIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.QueryLibraryQueryIds
}

// GetQueryLibraryQueryIdsOk returns a tuple with the QueryLibraryQueryIds field value
// and a boolean to check if the value has been set.
func (o *SpacesCopyElementsPost201ResponseData) GetQueryLibraryQueryIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QueryLibraryQueryIds, true
}

// SetQueryLibraryQueryIds sets field value
func (o *SpacesCopyElementsPost201ResponseData) SetQueryLibraryQueryIds(v []string) {
	o.QueryLibraryQueryIds = v
}

// GetAppIds returns the AppIds field value
func (o *SpacesCopyElementsPost201ResponseData) GetAppIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AppIds
}

// GetAppIdsOk returns a tuple with the AppIds field value
// and a boolean to check if the value has been set.
func (o *SpacesCopyElementsPost201ResponseData) GetAppIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppIds, true
}

// SetAppIds sets field value
func (o *SpacesCopyElementsPost201ResponseData) SetAppIds(v []string) {
	o.AppIds = v
}

// GetWorkflowIds returns the WorkflowIds field value
func (o *SpacesCopyElementsPost201ResponseData) GetWorkflowIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.WorkflowIds
}

// GetWorkflowIdsOk returns a tuple with the WorkflowIds field value
// and a boolean to check if the value has been set.
func (o *SpacesCopyElementsPost201ResponseData) GetWorkflowIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkflowIds, true
}

// SetWorkflowIds sets field value
func (o *SpacesCopyElementsPost201ResponseData) SetWorkflowIds(v []string) {
	o.WorkflowIds = v
}

func (o SpacesCopyElementsPost201ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpacesCopyElementsPost201ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource_ids"] = o.ResourceIds
	toSerialize["query_library_query_ids"] = o.QueryLibraryQueryIds
	toSerialize["app_ids"] = o.AppIds
	toSerialize["workflow_ids"] = o.WorkflowIds

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpacesCopyElementsPost201ResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resource_ids",
		"query_library_query_ids",
		"app_ids",
		"workflow_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSpacesCopyElementsPost201ResponseData := _SpacesCopyElementsPost201ResponseData{}

	err = json.Unmarshal(data, &varSpacesCopyElementsPost201ResponseData)

	if err != nil {
		return err
	}

	*o = SpacesCopyElementsPost201ResponseData(varSpacesCopyElementsPost201ResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "resource_ids")
		delete(additionalProperties, "query_library_query_ids")
		delete(additionalProperties, "app_ids")
		delete(additionalProperties, "workflow_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpacesCopyElementsPost201ResponseData struct {
	value *SpacesCopyElementsPost201ResponseData
	isSet bool
}

func (v NullableSpacesCopyElementsPost201ResponseData) Get() *SpacesCopyElementsPost201ResponseData {
	return v.value
}

func (v *NullableSpacesCopyElementsPost201ResponseData) Set(val *SpacesCopyElementsPost201ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableSpacesCopyElementsPost201ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableSpacesCopyElementsPost201ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpacesCopyElementsPost201ResponseData(val *SpacesCopyElementsPost201ResponseData) *NullableSpacesCopyElementsPost201ResponseData {
	return &NullableSpacesCopyElementsPost201ResponseData{value: val, isSet: true}
}

func (v NullableSpacesCopyElementsPost201ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpacesCopyElementsPost201ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


